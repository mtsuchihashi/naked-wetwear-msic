{"version":3,"sources":["webpack:///./src/components/TagList.js","webpack:///./src/components/BlogPostTemplate.js","webpack:///./src/useTheme.js"],"names":["TagList","_ref","tags","react_default","a","createElement","className","map","tag","gatsby_browser_entry","to","__webpack_require__","d","__webpack_exports__","pageQuery","Temp","data","pageContext","console","log","_useTheme","useTheme","theme","toggleTheme","markdownRemark","frontmatter","html","timeToRead","previous","next","slug","title","Helmet_default","onClick","src","alt","AniLink_default","cover","direction","bg","width","authorImg","fade","author","date","dangerouslySetInnerHTML","__html","components_TagList","style","display","flexWrap","justifyContent","listStyle","padding","react__WEBPACK_IMPORTED_MODULE_0__","_useState","useState","setTheme","useEffect","localTheme","localStorage","getItem","setItem"],"mappings":"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","file":"component---src-components-blog-post-template-js-52ffbda57d1f35ab50f8.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby';\n\nconst TagList = ({ tags }) => {\n    return (\n        <div className = \"my-4\">\n            <h4>Tags</h4>\n            <div>\n                {\n                    tags.map(\n                        tag => (<Link to={\"/tags/\" + tag} className=\"mr-3 btn my-2 btn-info\">#{tag}</Link>)\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TagList\n","import { graphql } from \"gatsby\"\nimport React from 'react'\nimport '../style.css'\nimport Helmet from 'react-helmet'\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\nimport useTheme from '../useTheme'\nimport TagList from \"./TagList\";\n// import { DiscussionEmbed } from 'disqus-react'\n\nconst Temp = ({ data, pageContext }) => {\n\n  console.log(pageContext)\n\n  const { theme, toggleTheme } = useTheme();\n\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, timeToRead } = markdownRemark\n  const { previous, next } = pageContext\n\n  const disqusConfig = {\n    shortname: \"NWSM\",//your site shortname here\n    config: { identifier: frontmatter.slug, title: frontmatter.title },\n  }\n\n  function getTheme() {\n    if (theme === \"light\") {\n      return <img src=\"https://img.icons8.com/ios-glyphs/24/FFFFFF/moon-symbol.png\" alt=\"moon-icon\" />\n    }\n    else {\n      return <img src=\"https://img.icons8.com/android/24/FFFFFF/sun.png\" alt=\"sun-icon\" />\n    }\n  }\n\n\n  return (\n    <div className={\"row post \" + theme}>\n      <Helmet>\n        <title>{frontmatter.title}</title>\n      </Helmet>\n      <button className=\"btn theme-toggle-button\" onClick={toggleTheme}>\n        {getTheme()}\n      </button>\n      <div className={\"col-lg-4 px-5 post-prefix bg-\" + theme}>\n        <div className=\"flexbox\">\n          <AniLink\n            to=\"/\"\n            cover\n            direction=\"right\"\n            bg=\"#00BCD4\"\n          >\n            <img src=\"https://img.icons8.com/material-rounded/48/00bcd4/back.png\" width=\"48\" alt=\"back-icon\" />\n          </AniLink>\n          <span className=\"display-4 font-weight-bold\">\n            {frontmatter.title}\n          </span>\n          <span className=\"font-weight-bold text-muted\">\n            {timeToRead} MIN READ\n          </span>\n          <div className=\"row\">\n            <img\n              alt=\"author-img\"\n              className=\"author-img rounded-circle ml-3\"\n              src={frontmatter.authorImg}\n              width=\"60\" />\n\n\n            <span className=\"col my-auto\">\n              <AniLink fade className=\"font-weight-bold\" to=\"/about\">{frontmatter.author}</AniLink>\n              <h6>{frontmatter.date}</h6>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className={\"col-lg-8 \" + theme}>\n        <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: html }} />\n        <hr />\n        <div className=\"px-4 my-2\">\n          <TagList tags={frontmatter.tags} />\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <AniLink to={previous.frontmatter.slug} fade>\n                  ← {previous.frontmatter.title}\n                </AniLink>\n              )}\n            </li>\n            <li>\n              {next && (\n                <AniLink to={next.frontmatter.slug} fade>\n                  {next.frontmatter.title} →\n              </AniLink>\n              )}\n            </li>\n          </ul>\n          <hr/>\n          {/* comments go here */}\n          {/* <DiscussionEmbed {...disqusConfig} /> */}\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Temp\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        tags\n        author\n        authorImg\n      }\n      timeToRead\n    }\n  }\n`","import { useEffect, useState } from \"react\";\n\nexport default () => {\n\tconst [theme, setTheme] = useState(\"light\");\n\tconst toggleTheme = () => {\n\t\tif (theme !== \"dark\") {\n\t\t\tlocalStorage.setItem(\"theme\", \"dark\");\n\t\t\tsetTheme(\"dark\");\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"theme\", \"light\");\n\t\t\tsetTheme(\"light\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tconst localTheme = localStorage.getItem(\"theme\");\n\t\tif (localTheme) {\n\t\t\tsetTheme(localTheme);\n\t\t}\n\t}, {});\n\n\treturn {\n\t\ttheme,\n\t\ttoggleTheme\n\t};\n};\n"],"sourceRoot":""}